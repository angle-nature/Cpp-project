#include<iostream>
using namespace std;

//抽象饮品类
class AbstractDrinking
{
public:

	//煮水
	virtual void Boil() = 0;

	//冲泡
	virtual void Brew() = 0;

	//倒入杯中
	virtual void PourinCup() = 0;

	//加入辅料
	virtual void Putsomething() = 0;

	void makeDrink()
	{
		Boil();
		Brew();
		PourinCup();
		Putsomething();
	}
};

//制作咖啡
class Coffee :public AbstractDrinking
{
public:

	//煮水
	virtual void Boil()
	{
		cout << "煮水" << endl;
	}

	//冲泡
	virtual void Brew()
	{
		cout << "冲泡咖啡" << endl;
	}

	//倒入杯中
	virtual void PourinCup()
	{
		cout << "倒入咖啡杯中" << endl;
	}

	//加入辅料
	virtual void Putsomething()
	{
		cout << "加入糖和牛奶" << endl;
	}
};

//制作茶叶
class Tea :public AbstractDrinking
{
public:

	//煮水
	virtual void Boil()
	{
		cout << "煮水" << endl;
	}

	//冲泡
	virtual void Brew()
	{
		cout << "冲泡茶叶" << endl;
	}

	//倒入杯中
	virtual void PourinCup()
	{
		cout << "倒入茶杯中" << endl;
	}

	//加入辅料
	virtual void Putsomething()
	{
		cout << "加入枸杞" << endl;
	}
};

void doWork(AbstractDrinking* abd)  //AbstractDrinking* abd=new Coffee
{
	abd->makeDrink();
	delete abd;
}

void test()
{
	doWork(new Coffee);
	//doWork(new Tea);
}

int main()
{
	test();

	system("pause");

	return 0;
}